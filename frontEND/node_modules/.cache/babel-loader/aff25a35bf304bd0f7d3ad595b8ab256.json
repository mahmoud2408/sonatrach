{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\sona-app\\\\frontEND\\\\src\\\\pages\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst API_URL = \"http://localhost:5005/api\";\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Appeler l'API de connexion\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        // Permet de gérer les cookies de session\n        body: JSON.stringify({\n          login: username,\n          // Le backend attend un champ \"login\" (email ou username)\n          password,\n          rememberMe\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`Connexion réussie, utilisateur ID : ${data.userId}`);\n        // Vous pouvez rediriger l'utilisateur ou effectuer d'autres actions ici\n      } else {\n        alert(`Erreur : ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion :\", error);\n      alert(\"Erreur lors de la connexion\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-5\",\n    style: {\n      maxWidth: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Content de vous revoir\\xA0!\"), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Connectez-vous \\xE0 votre compte\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Entrez votre nom d\\u2019utilisateur\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Entrez votre mot de passe\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"rememberMe\",\n    checked: rememberMe,\n    onChange: e => setRememberMe(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"rememberMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Se souvenir de moi\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/reset-password\",\n    className: \"ms-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Vous avez oubli\\xE9 votre mot de passe\\xA0?\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary w-100 btn-se-connecter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Se connecter\")));\n}\nexport default Login;","map":{"version":3,"names":["React","useState","useNavigate","API_URL","Login","username","setUsername","password","setPassword","rememberMe","setRememberMe","handleSubmit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","login","data","json","ok","alert","userId","error","console","createElement","className","style","maxWidth","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","id","checked","htmlFor","href"],"sources":["C:/Users/hp/sona-app/frontEND/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst API_URL = \"http://localhost:5005/api\";\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Appeler l'API de connexion\r\n      const response = await fetch(`${API_URL}/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\", // Permet de gérer les cookies de session\r\n        body: JSON.stringify({\r\n          login: username, // Le backend attend un champ \"login\" (email ou username)\r\n          password,\r\n          rememberMe,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(`Connexion réussie, utilisateur ID : ${data.userId}`);\r\n        // Vous pouvez rediriger l'utilisateur ou effectuer d'autres actions ici\r\n      } else {\r\n        alert(`Erreur : ${data.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la connexion :\", error);\r\n      alert(\"Erreur lors de la connexion\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\" style={{ maxWidth: \"400px\" }}>\r\n      <h3 className=\"text-center mb-4\">Content de vous revoir&nbsp;!</h3>\r\n      <h4 className=\"text-center mb-4\">Connectez-vous à votre compte</h4>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Nom d'utilisateur */}\r\n        <div className=\"mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Entrez votre nom d’utilisateur\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Mot de passe */}\r\n        <div className=\"mb-3\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Entrez votre mot de passe\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Se souvenir de moi */}\r\n        <div className=\"form-check mb-3\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            id=\"rememberMe\"\r\n            checked={rememberMe}\r\n            onChange={(e) => setRememberMe(e.target.checked)}\r\n          />\r\n          <label className=\"form-check-label\" htmlFor=\"rememberMe\">\r\n            Se souvenir de moi\r\n          </label>\r\n          {/* Lien \"mot de passe oublié\" */}\r\n          <a href=\"/reset-password\" className=\"ms-2\">\r\n            Vous avez oublié votre mot de passe&nbsp;?\r\n          </a>\r\n        </div>\r\n\r\n        {/* Bouton Se connecter */}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary w-100 btn-se-connecter\"\r\n        >\r\n          Se connecter\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}