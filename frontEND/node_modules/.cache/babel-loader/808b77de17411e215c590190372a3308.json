{"ast":null,"code":"var _jsxFileName = \"/Users/radhihamouda/sonatrach/frontEND/src/pages/ResetPassword.js\";\n// frontend/src/pages/ResetPassword.js\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst API_URL = \"http://localhost:5005/api\";\nfunction ResetPassword() {\n  const [email, setEmail] = useState(\"\");\n  const [step, setStep] = useState(1); // 1: demande de code, 2: confirmation\n  const [code, setCode] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Etape 1 : Demander l'envoi d'un code par email\n  const handleRequestReset = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${API_URL}/auth/request-reset`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Un code de réinitialisation vous a été envoyé par email\");\n        setStep(2);\n      } else {\n        alert(`Erreur : ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la demande de réinitialisation :\", error);\n      alert(\"Erreur lors de la demande de réinitialisation\");\n    }\n  };\n\n  // Etape 2 : Valider le code et envoyer le nouveau mot de passe\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${API_URL}/auth/reset-password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          code,\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Votre mot de passe a été réinitialisé avec succès\");\n        navigate(\"/login\");\n      } else {\n        alert(`Erreur : ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la réinitialisation du mot de passe :\", error);\n      alert(\"Erreur lors de la réinitialisation du mot de passe\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-5\",\n    style: {\n      maxWidth: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, step === 1 && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRequestReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"R\\xE9initialisation du mot de passe\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    placeholder: \"Votre email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Envoyer le code\")), step === 2 && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleResetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Valider le code et r\\xE9initialiser votre mot de passe\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Code de r\\xE9initialisation\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Code \\xE0 4 chiffres\",\n    value: code,\n    onChange: e => setCode(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Nouveau mot de passe\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Entrez votre nouveau mot de passe\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"R\\xE9initialiser le mot de passe\")));\n}\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","useNavigate","API_URL","ResetPassword","email","setEmail","step","setStep","code","setCode","newPassword","setNewPassword","navigate","handleRequestReset","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","error","console","handleResetPassword","createElement","className","style","maxWidth","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required"],"sources":["/Users/radhihamouda/sonatrach/frontEND/src/pages/ResetPassword.js"],"sourcesContent":["// frontend/src/pages/ResetPassword.js\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst API_URL = \"http://localhost:5005/api\";\n\nfunction ResetPassword() {\n  const [email, setEmail] = useState(\"\");\n  const [step, setStep] = useState(1); // 1: demande de code, 2: confirmation\n  const [code, setCode] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Etape 1 : Demander l'envoi d'un code par email\n  const handleRequestReset = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${API_URL}/auth/request-reset`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Un code de réinitialisation vous a été envoyé par email\");\n        setStep(2);\n      } else {\n        alert(`Erreur : ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la demande de réinitialisation :\", error);\n      alert(\"Erreur lors de la demande de réinitialisation\");\n    }\n  };\n\n  // Etape 2 : Valider le code et envoyer le nouveau mot de passe\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${API_URL}/auth/reset-password`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ email, code, newPassword }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Votre mot de passe a été réinitialisé avec succès\");\n        navigate(\"/login\");\n      } else {\n        alert(`Erreur : ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\n        \"Erreur lors de la réinitialisation du mot de passe :\",\n        error\n      );\n      alert(\"Erreur lors de la réinitialisation du mot de passe\");\n    }\n  };\n\n  return (\n    <div className=\"container my-5\" style={{ maxWidth: \"400px\" }}>\n      {step === 1 && (\n        <form onSubmit={handleRequestReset}>\n          <h3>Réinitialisation du mot de passe</h3>\n          <div className=\"mb-3\">\n            <label>Email</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              placeholder=\"Votre email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Envoyer le code\n          </button>\n        </form>\n      )}\n      {step === 2 && (\n        <form onSubmit={handleResetPassword}>\n          <h3>Valider le code et réinitialiser votre mot de passe</h3>\n          <div className=\"mb-3\">\n            <label>Code de réinitialisation</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Code à 4 chiffres\"\n              value={code}\n              onChange={(e) => setCode(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"mb-3\">\n            <label>Nouveau mot de passe</label>\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              placeholder=\"Entrez votre nouveau mot de passe\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Réinitialiser le mot de passe\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}