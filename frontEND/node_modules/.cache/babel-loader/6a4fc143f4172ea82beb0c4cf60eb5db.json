{"ast":null,"code":"var _jsxFileName = \"/Users/radhihamouda/sonatrach/frontEND/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst API_URL = \"http://localhost:5005/api\";\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Appeler l'API de connexion\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        // Permet de gérer les cookies de session\n        body: JSON.stringify({\n          login: username,\n          // Le backend attend un champ \"login\" (email ou username)\n          password,\n          rememberMe\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`Connexion réussie, utilisateur ID : ${data.userId}`);\n        // Vous pouvez rediriger l'utilisateur ou effectuer d'autres actions ici\n        navigate(\"/\");\n      } else {\n        alert(`Erreur : ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion :\", error);\n      alert(\"Erreur lors de la connexion\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-5\",\n    style: {\n      maxWidth: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Content de vous revoir\\xA0!\"), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Connectez-vous \\xE0 votre compte\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Entrez votre nom d\\u2019utilisateur\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Entrez votre mot de passe\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    id: \"rememberMe\",\n    checked: rememberMe,\n    onChange: e => setRememberMe(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"rememberMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Se souvenir de moi\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/reset-password\",\n    className: \"ms-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Vous avez oubli\\xE9 votre mot de passe\\xA0?\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary w-100 btn-se-connecter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Se connecter\")));\n}\nexport default Login;","map":{"version":3,"names":["React","useState","useNavigate","API_URL","Login","username","setUsername","password","setPassword","rememberMe","setRememberMe","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","login","data","json","ok","alert","userId","error","console","createElement","className","style","maxWidth","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","id","checked","htmlFor","href"],"sources":["/Users/radhihamouda/sonatrach/frontEND/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst API_URL = \"http://localhost:5005/api\";\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Appeler l'API de connexion\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        credentials: \"include\", // Permet de gérer les cookies de session\n        body: JSON.stringify({\n          login: username, // Le backend attend un champ \"login\" (email ou username)\n          password,\n          rememberMe,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        alert(`Connexion réussie, utilisateur ID : ${data.userId}`);\n        // Vous pouvez rediriger l'utilisateur ou effectuer d'autres actions ici\n        navigate(\"/\");\n      } else {\n        alert(`Erreur : ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion :\", error);\n      alert(\"Erreur lors de la connexion\");\n    }\n  };\n\n  return (\n    <div className=\"container my-5\" style={{ maxWidth: \"400px\" }}>\n      <h3 className=\"text-center mb-4\">Content de vous revoir&nbsp;!</h3>\n      <h4 className=\"text-center mb-4\">Connectez-vous à votre compte</h4>\n\n      <form onSubmit={handleSubmit}>\n        {/* Nom d'utilisateur */}\n        <div className=\"mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Entrez votre nom d’utilisateur\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n\n        {/* Mot de passe */}\n        <div className=\"mb-3\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"Entrez votre mot de passe\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n\n        {/* Se souvenir de moi */}\n        <div className=\"form-check mb-3\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"rememberMe\"\n            checked={rememberMe}\n            onChange={(e) => setRememberMe(e.target.checked)}\n          />\n          <label className=\"form-check-label\" htmlFor=\"rememberMe\">\n            Se souvenir de moi\n          </label>\n          {/* Lien \"mot de passe oublié\" */}\n          <a href=\"/reset-password\" className=\"ms-2\">\n            Vous avez oublié votre mot de passe&nbsp;?\n          </a>\n        </div>\n\n        {/* Bouton Se connecter */}\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-100 btn-se-connecter\"\n        >\n          Se connecter\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}